<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/4QCuRXhpZgAATU0AKgAAAAgAAYdpAAQAAAABAAAAGgAAAAAAAZKG
        AAcAAAB6AAAALAAAAABVTklDT0RFAABDAFIARQBBAFQATwBSADoAIABnAGQALQBqAHAAZQBnACAAdgAx
        AC4AMAAgACgAdQBzAGkAbgBnACAASQBKAEcAIABKAFAARQBHACAAdgA2ADIAKQAsACAAcQB1AGEAbABp
        AHQAeQAgAD0AIAA5ADAACv/bAEMAAwICAwICAwMDAwQDAwQFCAUFBAQFCgcHBggMCgwMCwoLCw0OEhAN
        DhEOCwsQFhARExQVFRUMDxcYFhQYEhQVFP/bAEMBAwQEBQQFCQUFCRQNCw0UFBQUFBQUFBQUFBQUFBQU
        FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFP/AABEIAMgBLAMBIgACEQEDEQH/xAAfAAAB
        BQEBAQEBAQAAAAAAAAAAAQIDBAUGBwgJCgv/xAC1EAACAQMDAgQDBQUEBAAAAX0BAgMABBEFEiExQQYT
        UWEHInEUMoGRoQgjQrHBFVLR8CQzYnKCCQoWFxgZGiUmJygpKjQ1Njc4OTpDREVGR0hJSlNUVVZXWFla
        Y2RlZmdoaWpzdHV2d3h5eoOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK
        0tPU1dbX2Nna4eLj5OXm5+jp6vHy8/T19vf4+fr/xAAfAQADAQEBAQEBAQEBAAAAAAAAAQIDBAUGBwgJ
        Cgv/xAC1EQACAQIEBAMEBwUEBAABAncAAQIDEQQFITEGEkFRB2FxEyIygQgUQpGhscEJIzNS8BVictEK
        FiQ04SXxFxgZGiYnKCkqNTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqCg4SFhoeI
        iYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2dri4+Tl5ufo6ery8/T1
        9vf4+fr/2gAMAwEAAhEDEQA/APhnNFFFfrZ+XhRnFFFABRRRQAdKBRmigAooozSAOtFFFABRRmimAUUU
        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
</value>
  </data>
</root>